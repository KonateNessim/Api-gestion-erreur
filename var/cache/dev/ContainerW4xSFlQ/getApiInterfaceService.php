<?php

namespace ContainerW4xSFlQ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Controller\Config\ApiInterface' shared autowired service.
     *
     * @return \App\Controller\Config\ApiInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/FileTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/Config/ApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Service/Utils.php';
        include_once \dirname(__DIR__, 4).'/src/Service/FileUploader.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        $container->services['App\\Controller\\Config\\ApiInterface'] = $instance = new \App\Controller\Config\ApiInterface($a, new \App\Service\Utils(new \App\Service\FileUploader(), $a), ($container->privates['security.user_password_hasher'] ?? $container->load('getSecurity_UserPasswordHasherService')), ($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)), ($container->privates['debug.serializer'] ?? self::getDebug_SerializerService($container)), ($container->privates['debug.validator'] ?? self::getDebug_ValidatorService($container)), ($container->privates['App\\Repository\\UserRepository'] ?? $container->load('getUserRepositoryService')));

        $instance->setContainer(($container->privates['.service_locator.x9zd309'] ?? $container->load('get_ServiceLocator_X9zd309Service'))->withContext('App\\Controller\\Config\\ApiInterface', $container));

        return $instance;
    }
}
