<?php

namespace ContainerEw6Z4sR;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_48d4k6EService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.48d4k6E' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.48d4k6E'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.1vYpZ1B.kernel::registerContainerConfiguration()', 'get_ServiceLocator_1vYpZ1B_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.1vYpZ1B.kernel::registerContainerConfiguration()', 'get_ServiceLocator_1vYpZ1B_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.1vYpZ1B.kernel::loadRoutes()', 'get_ServiceLocator_1vYpZ1B_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.1vYpZ1B.kernel::loadRoutes()', 'get_ServiceLocator_1vYpZ1B_KernelloadRoutesService', true],
            'App\\Controller\\ApiErrorController::receiveError' => ['privates', '.service_locator.zVKyHiy.App\\Controller\\ApiErrorController::receiveError()', 'getApiErrorControllerreceiveErrorService', true],
            'App\\Controller\\AuthController::login' => ['privates', '.service_locator.byvly3F.App\\Controller\\AuthController::login()', 'getAuthControllerloginService', true],
            'App\\Controller\\ResetPasswordController::reset' => ['privates', '.service_locator.R21nC86.App\\Controller\\ResetPasswordController::reset()', 'getResetPasswordControllerresetService', true],
            'App\\Controller\\UserController::toggleActive' => ['privates', '.service_locator.YlAh0cN.App\\Controller\\UserController::toggleActive()', 'getUserControllertoggleActiveService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.1vYpZ1B.kernel::registerContainerConfiguration()', 'get_ServiceLocator_1vYpZ1B_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.1vYpZ1B.kernel::loadRoutes()', 'get_ServiceLocator_1vYpZ1B_KernelloadRoutesService', true],
            'App\\Controller\\ApiErrorController:receiveError' => ['privates', '.service_locator.zVKyHiy.App\\Controller\\ApiErrorController::receiveError()', 'getApiErrorControllerreceiveErrorService', true],
            'App\\Controller\\AuthController:login' => ['privates', '.service_locator.byvly3F.App\\Controller\\AuthController::login()', 'getAuthControllerloginService', true],
            'App\\Controller\\ResetPasswordController:reset' => ['privates', '.service_locator.R21nC86.App\\Controller\\ResetPasswordController::reset()', 'getResetPasswordControllerresetService', true],
            'App\\Controller\\UserController:toggleActive' => ['privates', '.service_locator.YlAh0cN.App\\Controller\\UserController::toggleActive()', 'getUserControllertoggleActiveService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\ApiErrorController::receiveError' => '?',
            'App\\Controller\\AuthController::login' => '?',
            'App\\Controller\\ResetPasswordController::reset' => '?',
            'App\\Controller\\UserController::toggleActive' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\ApiErrorController:receiveError' => '?',
            'App\\Controller\\AuthController:login' => '?',
            'App\\Controller\\ResetPasswordController:reset' => '?',
            'App\\Controller\\UserController:toggleActive' => '?',
        ]);
    }
}
